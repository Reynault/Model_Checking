// Choix du modèle, ici PTA
// Le moteur utilisé est Digital Clock
pta

//-------CONFIGURATION-------//

// Valeurs limites pour les ressources
const int N_EXP = 10;
const int N_GOLD  = 10;

// Valeurs liées aux événements
// Voleur
const int THIEF_GOLD = 5;
// Accident
const int ACCIDENT_TIME = 5;
// Artéfact
const int ARTEFACT_EXP = 7;
// Trésor
const int TREASURE_TIME = 6;
const int TREASURE_GOLD = 6;
// Art martiaux
const int MARTIAL_COST = 3;
const int MARTIAL_EXP = 5;

// Temps limite pour une partie
const int T = 5;

//-------MODULE UNIQUE REPRESENTANT LE JEU DU POINT DE VUE DU HERO-------//

module heroGame
	// ---VARIABLES DU JEU---
	// horloge qui représente le temps de la partie
	time: clock;
	// booléen qui permet d'indiquer si la partie est finie
	end: bool init false;

	// ---VARIABLES DU HERO---
	// entier qui représente la position du hero
	hlocation: [0..2] init 0;
	// entier indique l'événement en cours, 0 étant aucun
	hevent: [0..6] init 0;
	// entier indiquant la quête en cours, 0 étant aucune
	hquest: [0..2] init 0;

	// Variables qui représentent respectivement OR_H et EXP_H
	goldHero : [0..N_EXP] init 0;
	expHero : [0..N_GOLD] init 0;
	
	invariant
		// ---CONFIGURATION DU JEU---

		// invariant qui empêche de manière globale
		// le module de dépasser la limite de temps
		(time <= T)
	endinvariant

	// commande qui s'active quand c'est la fin de la partie
	[ending] time = T -> 1: (end'=true);
endmodule

label "heroFinished" = (end = true);

//module badGuyGame = heroGame 
//	[time=timeM,
//	 x = xM,
//	 end = endM,
//	 hlocation = mlocation,
//	 hevent = mevent,
//	 hquest = mquest,
//	 goldHero = goldBadGuy, 
//	 expHero = expBadGuy] 
//endmodule

//label "badGuyFinished" = endM = true;




